@page "/"
@using CryptoDCA.DataModel.DTOs
@using CryptoDCA.DomainLogic.Services
@inject ICryptoService cryptoService
    @* @inject IInvestmentRetriever investmentRetriever *@

<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />

<style>
    .purple-tinted-logo {
        filter: invert(34%) sepia(95%) saturate(418%) hue-rotate(233deg) brightness(93%) contrast(95%);
        width: 600px; 
    }
</style>

<div class="container mt-5">

    <div class="text-center mb-4">
        <img src="https://cdn.tokero.com/content/4/images/tokero-logo-white-crypto-exchange-2x.png" alt="Tokero Logo" class="purple-tinted-logo" />
    </div>

    <br />
    <br />

    <h3 class="text-center">Crypto DCA Calculator</h3>
    <h5 class="text-center text-muted">With pleasure for TOKKERO</h5>

    <EditForm Model="investmentData" OnValidSubmit="CalculateDCA" class="mt-4">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="cryptoSelect">Select crypto</label>
            <select id="cryptoSelect" class="form-control" @bind="investmentData.SelectedCrypto">
                @foreach (var crypto in availableCryptos)
                {
                        <option value="@crypto">@crypto</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label for="startDate">Start investing date:</label>
            <InputDate id="startDate" class="form-control" @bind-Value="investmentData.StartDate"  />
        </div>

        <div class="form-group">
            <label for="monthlyInvestment">Mountly amount to invest (EUR):</label>
            <InputNumber id="monthlyInvestment" class="form-control" @bind-Value="investmentData.MonthlyInvestment" />
        </div>

        <button type="submit" class="btn btn-primary btn-block">Calculate DCA</button>
    </EditForm>

    @if (dcaResults != null)
    {
            <h4 class="mt-4">Results:</h4>
            <table class="table table-striped mt-2">
                <thead class="thead-dark">
                    <tr>
                        <th>Date</th>
                        <th>Invested Amount</th>
                        <th>Crypto Currency</th>
                        <th>Crypto Amount</th>
                        <th>Value Today</th>
                        <th>ROI</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var result in dcaResults)
                {
                            <tr>
                                <td>@result.Date.ToShortDateString()</td>
                                <td>@result.InvestedAmount.ToString("C", System.Globalization.CultureInfo.CurrentCulture)</td>
                                <td>@result.CryptoCurrency</tD>
                                <td>@result.CryptoAmount.ToString("F4")</td>
                                <td>@result.ValueToday.ToString("C", new System.Globalization.CultureInfo("en-US"))</td>
                                <td>@result.ROI.ToString("P2")</td>
                            </tr>
                }
                </tbody>
            </table>
    }
</div>

@code {
    private InvestmentData investmentData = new InvestmentData();
    private List<string> availableCryptos = new List<string> { "BTC", "ETH", "SOL", "XRP" }; 
    private List<DCAResultDto> dcaResults;


    private async Task CalculateDCA()
    {
        dcaResults = await cryptoService.CalculateDCA(investmentData);
    }

    private async Task OnInitializedAsync()
    {
         // availableCryptos = await investmentRetriever.GetAvailableCryptosAsync();
    }
}